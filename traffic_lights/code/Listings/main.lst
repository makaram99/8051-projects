C51 COMPILER V9.60.0.0   MAIN                                                              04/05/2022 01:40:26 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE src\main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\include) DEBUG OBJECTEXTEND
                    - PRINT(.\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          /********************************************************************************
   2           * @file    main.c
   3           * @author  Mahmoud Karam (ma.karam272@gmail.com)
   4           * @brief   Testing cute OS.
   5           * @details     Traffic light system (Chapter 8 - Embedded C by Professor j. Pont).                     
   6           *                      See \ref traffic.c for the implementation and sequence of the system
   7           *                      
   8           *                      Application usage:
   9           *                      1. Initialize modules.
  10           *              @code 
  11           *                              cuteOS_Init();    
  12           *                              TRAFFIC_Init(); 
  13           *                              @endcode
  14           *                      3. Create the tasks.
  15           *              @code cuteOS_TaskCreate(task1, 1000); // task1 will run every 1 second  @endcode
  16           *              @code cuteOS_TaskCreate(task2, 2000); // task2 will run every 2 seconds @endcode
  17           *          4. Start the Cute OS scheduler.
  18           *              @code cuteOS_Start();   @endcode
  19           *                      5. The application will run as follows:
  20           *                              5.1. Red for some seconds, then
  21           *                              5.2. Red-Amber for some seconds, then
  22           *                              5.3. Green for some seconds, then
  23           *                              5.4. Amberfor some seconds, then
  24           *                              5.5. Repeat from step 1.
  25           *                      The duration of each state is defined in the enum 
  26           *                      \ref TRAFFIC_SEQUENCE_DURATION_t in \ref traffic_cfg.h file.
  27           * @version 1.0.0
  28           * @date    2022-03-24
  29           * @copyright Copyright (c) 2022
  30           ********************************************************************************/
  31          #include <reg52.h>
  32          #include "STD_TYPES.h"
  33          #include "BIT_MATH.h"
  34          #include "Main.h"
  35          #include "Port.h"
  36          #include "cuteOS.h"
  37          #include "traffic.h"
  38          
  39          /*------------------------------------------------------------------------------*/
  40          /*                                      APPLICATION MAIN FUNCTION                                                                       */
  41          /*------------------------------------------------------------------------------*/
  42          void main(void) {
  43   1              /* Initialize the system */
  44   1              cuteOS_Init();                                  /*!< Initialize Cute OS                                         */
  45   1              TRAFFIC_Init();                                 /*!< Initialize the traffic light system        */
  46   1      
  47   1              /*!< Create the tasks */
  48   1              cuteOS_TaskCreate(TRAFFIC_Update, 1000);        /*!< Create a task to run the traffic light system */
  49   1      
  50   1              /*!< Start the Cute OS scheduler        */
  51   1              cuteOS_Start();
  52   1      
  53   1              /*!< The scheduler will never return from here  */
  54   1              while(1);
C51 COMPILER V9.60.0.0   MAIN                                                              04/05/2022 01:40:26 PAGE 2   

  55   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     24    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
